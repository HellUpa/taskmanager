version: "3.8"
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"   # HTTP server
      - "8000:8000"   # Health check
      - "9090:9090"   # Metrics
    depends_on:
      - db
    volumes:
      - ./internal/config/config_docker.yaml:/etc/taskmanager/config.yaml
      - ./internal/db/migrations:/etc/taskmanager/migrations
    environment:
      - GODEBUG=gctrace=1 # Enable GC trace
    networks:
      - taskmanager-net

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres # !!! Сменить пароль !!!
      POSTGRES_DB: taskmanager
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskmanager-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # prometheus:
  #   image: prom/prometheus:v2.48.1
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/usr/share/prometheus/console_libraries'
  #     - '--web.console.templates=/usr/share/prometheus/consoles'
  #   ports:
  #     - "9000:9090"
  #   networks:
  #     - taskmanager-net
  kratos:  # Kratos service
    image: oryd/kratos:v1.3.0 
    ports:
      - "4433:4433"  # Kratos public API
      - "4434:4434"  # Kratos admin API
    command: serve -c /etc/config/kratos/kratos.yaml
    depends_on:
      - kratos-migrate
    environment:
      - DSN=postgres://postgres:postgres@kratos-db:5432/kratos?sslmode=disable
      - KRATOS_URL_SELF_PUBLIC=http://localhost:4433 
      - KRATOS_URL_SELF_ADMIN=http://localhost:4434
      - LOG_LEVEL=debug
      - SECRETS_COOKIE=BVqFJErBdrPX5ZQDbRf3uwNgzRT9jSkN
    volumes:
      - ./kratos:/etc/config/kratos  # Mount Kratos config
    networks:
      - taskmanager-net
    restart: unless-stopped

  kratos-migrate:  # Kratos migration service
    image: oryd/kratos:v1.3.0
    environment:
      - DSN=postgres://postgres:postgres@kratos-db:5432/kratos?sslmode=disable
    command:
      - migrate
      - sql
      - -e
      - --yes
    depends_on:
      - kratos-db
    networks:
      - taskmanager-net
    restart: on-failure

  kratos-db:  # PostgreSQL for Kratos
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kratos  # IMPORTANT:  Database name is 'kratos'
    networks:
      - taskmanager-net
    volumes:
      - kratos_db_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d kratos -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  #prometheus_data:
  kratos_db_data:

networks:
  taskmanager-net:
    driver: bridge