services:
  ### SERVER ###
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"   # HTTP server
      - "8000:8000"   # Health check
      - "9090:9090"   # Metrics
    depends_on:
      - db
    volumes:
      - ./docker-conf/config_docker.yaml:/etc/taskmanager/config.yaml
      - ./internal/db/migrations:/etc/taskmanager/migrations
    environment:
      - GODEBUG=gctrace=1 # Enable GC trace
    networks:
      - taskmanager-net

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskmanager
    volumes:
      - taskmanager-postgres:/var/lib/postgresql/data
    networks:
      - taskmanager-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  ### KRATOS ###
  kratos-db:  # PostgreSQL for Kratos
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kratos
    networks:
      - taskmanager-net
    volumes:
      - kratos-postgres:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d kratos -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  kratos-migrate:
    image: oryd/kratos:v1.3.0
    environment:
      - DSN=postgres://postgres:postgres@kratos-db:5432/kratos?sslmode=disable
    volumes:
      - type: bind
        source: ./docker-conf
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    depends_on:
      - kratos-db
    restart: on-failure
    networks:
      - taskmanager-net

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v1.3.0
    ports:
      - "4455:4455"
    environment:
      - PORT=4455
      - HYDRA_ADMIN_URL=http://hydra:4445
      - KRATOS_PUBLIC_URL=http://kratos:4433
      - KRATOS_BROWSER_URL=http://127.0.0.1:4433
      - COOKIE_SECRET=changeme
      - CSRF_COOKIE_NAME=cookie_name
      - CSRF_COOKIE_SECRET=changeme
      - DANGEROUSLY_DISABLE_SECURE_CSRF_COOKIES=true
    networks:
      - taskmanager-net
    restart: on-failure

  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.3.0
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://postgres:postgres@kratos-db:5432/kratos?sslmode=disable
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ./docker-conf
        target: /etc/config/kratos
    networks:
      - taskmanager-net

  ### PROMETHEUS ###
  prometheus:
    image: prom/prometheus:v2.48.1
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9000:9090"
    networks:
      - taskmanager-net

  ### HYDRA ###
  # hydra:
  #   image: oryd/hydra:v2.3.0
  #   ports:
  #     - "4444:4444" # Public port
  #     - "4445:4445" # Admin port
  #     - "5555:5555" # Port for hydra token user
  #   command: serve all --config=/etc/config/hydra/hydra.yml --dev
  #   volumes:
  #     - type: bind
  #       source: ./docker-conf
  #       target: /etc/config/hydra
  #   environment:
  #     - DSN=postgres://postgres:postgres@hydra-db:5432/hydra?sslmode=disable
  #   restart: unless-stopped
  #   depends_on:
  #     - hydra-migrate
  #   networks:
  #     - taskmanager-net
  
  # hydra-db:  # PostgreSQL for hydra
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: hydra
  #   networks:
  #     - taskmanager-net
  #   volumes:
  #     - hydra-postgres:/var/lib/postgresql/data 
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -d hydra -U postgres"]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  # hydra-migrate:
  #   image: oryd/hydra:v2.3.0
  #   environment:
  #     - DSN=postgres://postgres:postgres@hydra-db:5432/hydra?sslmode=disable
  #   volumes:
  #     - type: bind
  #       source: ./docker-conf
  #       target: /etc/config/hydra
  #   command: migrate sql --config=/etc/config/hydra/hydra.yml -e --yes
  #   depends_on:
  #     - hydra-db
  #   restart: on-failure
  #   networks:
  #     - taskmanager-net

networks:
  taskmanager-net:
    driver: bridge
volumes:
  taskmanager-postgres:
  prometheus_data:
  # hydra-postgres:
  kratos-postgres:
